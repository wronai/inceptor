[tox]
minversion = 4.0
envlist =
    py{39,310,311,312},
    flake8,
    mypy,
    docs,
    clean,
    build
isolated_build = True
requires =
    pip >= 23.0.0
    poetry >= 1.5.0
    pytest-cov >= 4.1.0
    pytest-xdist >= 3.5.0

[testenv:flake8]
basepython = python3.11
deps =
    flake8>=6.1.0
    flake8-black>=0.3.6
    flake8-bugbear>=23.9.11
    flake8-docstrings>=1.7.0
    flake8-import-order>=0.18.2
    flake8-annotations>=3.0.0
    flake8-typing-imports>=1.14.0
    flake8-builtins>=2.1.0
    flake8-comprehensions>=3.14.0
    flake8-print>=5.0.0
    flake8-quotes>=3.3.2
    flake8-string-format>=0.3.0
    flake8-tidy-imports>=4.10.0
    flake8-eradicate>=1.5.0
    flake8-return>=1.2.0
    flake8-simplify>=0.20.0
    pep8-naming>=0.13.3
    black>=23.11.0
    isort>=5.12.0
commands =
    black --check --diff src tests
    isort --check-only --diff src tests
    flake8 src tests

[testenv:mypy]
basepython = python3.11
deps =
    mypy>=1.7.1
    types-requests>=2.31.0.10
    types-pyyaml>=6.0.12.11
    types-tabulate>=0.9.0.5
    types-python-dateutil>=2.8.19.14
    -e .
commands =
    mypy --install-types --non-interactive src/

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = .git,__pycache__,.tox,.mypy_cache,.pytest_cache,build,dist,venv
per-file-ignores =
    # Allow non-abstract empty methods in abstract base classes
    __init__.py: F401
    # Allow wildcard imports in __init__.py files
    __init__.py: F403
    # Allow too many arguments in test files
    tests/*.py: F811, F841, W503, E501

[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --import-mode=importlib --strict-markers --strict-config --doctest-modules -n auto
norecursedirs = .git .tox .mypy_cache .pytest_cache __pycache__ build dist
filterwarnings = error::DeprecationWarning
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(name)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[testenv:docs]
basepython = python3.11
deps =
    -e .[docs]
    sphinx
    sphinx-rtd-theme
    sphinx-autodoc-typehints
commands =
    sphinx-build -b html docs/source docs/build/html

[testenv:clean]
basepython = python3.11
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('*.egg-info', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import os; os.remove('.coverage') if os.path.exists('.coverage') else None"
    python -c "import os; os.remove('coverage.xml') if os.path.exists('coverage.xml') else None"

[testenv:build]
basepython = python3.11
deps =
    build
    twine
commands =
    python -m build
    twine check dist/*

[testenv:release]
basepython = python3.11
deps =
    twine
commands =
    twine upload dist/*
